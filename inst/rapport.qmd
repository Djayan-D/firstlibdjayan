---
title: "Rapport"
author: "Djayan DAËRON"
format: html
params:
  code_commune: 44109   # Code de la commune (par exemple, Nantes)
  code_departement: 44  # Code du département (par exemple, Loire-Atlantique)
<<<<<<< HEAD
  dataframe_name: NULL
  dataframe_path: NULL
=======
>>>>>>> gh-pages
---


# Chargement des packages
```{r}
library(dplyr)
```

# Installation et chargement de la bibliothèque
```{r}
remotes::install_github("Djayan-D/firstlibdjayan")
library(firstlibdjayan)
```

# Chargement des données
<<<<<<< HEAD
```{r setup, include=FALSE}
# Charger le fichier temporaire si ce n'est pas "elus_sample"

if (params$dataframe_name == "elus_sample") {
  data <- elus_sample  # Utilise directement elus_sample
  
  data$Date.de.naissance <- as.Date(data$Date.de.naissance, format = "%d/%m/%Y")
} else {
  # Charge le fichier sauvegardé en utilisant le chemin passé en paramètre
  data <- readRDS(normalizePath(params$dataframe_path, mustWork = TRUE))
}
=======
```{r}
data <- elus_sample
```

# Conversion du type de données
```{r}
data$Date.de.naissance <- as.Date(data$Date.de.naissance)
>>>>>>> gh-pages
```

# Filtrage des données par commune et département
```{r}
df_commune <- data |> 
  filter(Code.de.la.commune == params$code_commune)

df_departement <- data |> 
  filter(Code.du.département == params$code_departement)
```

# Création des jeux de données pour la commune et le département
```{r}
df_commune <- creer_commune(df_commune)
df_departement <- creer_departement(df_departement)
```

# Analyse des données
```{r}
summary(df_commune)
plot(df_commune)

summary(df_departement)
plot(df_departement)
```
